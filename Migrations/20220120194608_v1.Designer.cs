// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Projekat.Migrations
{
    [DbContext(typeof(CvecaraKontekst))]
    [Migration("20220120194608_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Cvecare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojCveca")
                        .HasColumnType("int");

                    b.Property<string>("Grad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cvecare");
                });

            modelBuilder.Entity("Models.Dostave", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojCveca")
                        .HasColumnType("int");

                    b.Property<int>("CvecareID")
                        .HasColumnType("int");

                    b.Property<int>("DostavljaciID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CvecareID");

                    b.HasIndex("DostavljaciID");

                    b.ToTable("Dostave");
                });

            modelBuilder.Entity("Models.Dostavljaci", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Dostavljaci");
                });

            modelBuilder.Entity("Models.Menadzer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Broj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CvecaraID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CvecaraID")
                        .IsUnique();

                    b.ToTable("Menadzer");
                });

            modelBuilder.Entity("Models.Zaposleni", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CvecareID")
                        .HasColumnType("int");

                    b.Property<string>("Grad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CvecareID");

                    b.ToTable("Zaposleni");
                });

            modelBuilder.Entity("Models.Dostave", b =>
                {
                    b.HasOne("Models.Cvecare", "Cvecare")
                        .WithMany("Dostave")
                        .HasForeignKey("CvecareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Dostavljaci", "Dostavljaci")
                        .WithMany("Dostave")
                        .HasForeignKey("DostavljaciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cvecare");

                    b.Navigation("Dostavljaci");
                });

            modelBuilder.Entity("Models.Menadzer", b =>
                {
                    b.HasOne("Models.Cvecare", "Cvecare")
                        .WithOne("Menadzer")
                        .HasForeignKey("Models.Menadzer", "CvecaraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cvecare");
                });

            modelBuilder.Entity("Models.Zaposleni", b =>
                {
                    b.HasOne("Models.Cvecare", "Cvecare")
                        .WithMany("Zaposleni")
                        .HasForeignKey("CvecareID");

                    b.Navigation("Cvecare");
                });

            modelBuilder.Entity("Models.Cvecare", b =>
                {
                    b.Navigation("Dostave");

                    b.Navigation("Menadzer");

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("Models.Dostavljaci", b =>
                {
                    b.Navigation("Dostave");
                });
#pragma warning restore 612, 618
        }
    }
}
